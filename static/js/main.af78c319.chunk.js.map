{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useLocalStorageState","num","setNum","max","setMax","useState","rand","setRand","raffle","setRaffle","loading","setLoading","randomName","temp","Math","floor","random","length","makeSnow","snow","document","createElement","size","className","style","width","height","left","window","innerWidth","opacity","zIndex","animationDuration","body","appendChild","setTimeout","remove","console","log","useEffect","Number","Array","fill","map","_","i","filter","el","setInterval","htmlFor","type","id","name","min","onChange","e","target","value","onClick","callback","factor","times","internalCallback","t","counter","setDeceleratingTimeout","clearInterval","disabled","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af78c319.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport useLocalStorageState from \"use-local-storage-state\";\n\nconst App = () => {\n   const[num, setNum] = useLocalStorageState('num',[]);\n   const[max, setMax] = useLocalStorageState(\"max\", '');\n   const[rand, setRand] = useState(0);\n   const[raffle, setRaffle] = useState(null);\n   const[loading, setLoading] = useState(false);\n\n\n   const handleOnChange = (e) =>{\n     let temp = e.target.value;\n    setMax(temp);\n    console.log(max, \"max1\");\n   }\n   \n\n   const randomName = () => {\n    \n    let temp = Math.floor(Math.random() * num.length);\nsetRaffle(num[temp]);\n   }\n\n   const handleOnClick = () =>{\n\n     \n\nsetLoading(true);\n\n     \n    let temp = Math.floor(Math.random() * num.length);\n     setDeceleratingTimeout(randomName, 10, 30);\n  \n    setTimeout(() => {\n      setLoading(false);\n      clearInterval();\n      setRand(num[temp]);\n    }, 3000);\n\n   }\nconsole.log(num, \"num\");\n\n   useEffect(() => {\n     //max is sent as a string so we have to convert it\n    let temp = Number(max);\n\n    console.log(typeof temp, \"max2\");\n    setNum(Array(temp).fill().map((_, i) => i+1));\n   \n     \n   }, [max, setNum]);\n\n   useEffect(() => {\n     let temp = num.filter(el => el !== rand);\n    setNum(temp);\n    if(num.length === 1){\n      setMax('');\n    }\n\n   }, [rand]);\n\n\n\n  \n  function setDeceleratingTimeout(callback,factor, times) {\n    const internalCallback = ((t, counter) => {\n      return () => {\n        if (--t > 0) {\n          setTimeout(internalCallback, ++counter * factor);\n          callback();\n        }\n      };\n    })(times, 0);\n  \n    setTimeout(internalCallback, factor);\n  }\n\n  useEffect(() => {\n    setInterval(makeSnow, 60);\n  }, []);\n \n\nfunction makeSnow() {\n\tconst snow = document.createElement(\"div\");\n\tconst size = Math.random() * 4.5 + 3.5;\n\tsnow.className = \"snow\";\n\tsnow.style.width = size + \"px\";\n\tsnow.style.height = size + \"px\";\n\tsnow.style.left = Math.random() * window.innerWidth -30 + \"px\";\n\tsnow.style.opacity = size / 8;\n\tif (size < 7) {\n\t\tsnow.style.zIndex = -5;\n\t}\n\tsnow.style.animationDuration = Math.random() * 4 + 3+ \"s\";\n\tdocument.body.appendChild(snow);\n\tsetTimeout(() => snow.remove(), 2800);\n}\n\n  \n  \n  return (\n    <>\n      <div className=\"container\">\n      <div className=\"window\">\n\t\t<div className=\"santa\">\n\t\t\t<div className=\"head\">\n\t\t\t\t<div className=\"face\">\n\t\t\t\t\t<div className=\"redhat\">\n\t\t\t\t\t\t<div className=\"whitepart\"></div>\n\t\t\t\t\t\t<div className=\"redpart\"></div>\n\t\t\t\t\t\t<div className=\"hatball\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"eyes\"></div>\n\t\t\t\t\t<div className=\"beard\">\n\t\t\t\t\t\t<div className=\"nouse\"></div>\n\t\t\t\t\t\t<div className=\"mouth\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ears\"></div>\n\t\t\t</div>\n\t\t\t<div className=\"body\"></div>\n\t\t</div>\n\t</div>\n\n\n \n        <div className=\"section\">\n        <div>\n    <h1>Omnicom media group Nepal presents Secret Santa</h1>\n  </div>\n        <div className=\"section-one\">\n          <label htmlFor=\"quantity\">How many santas do we have?</label>\n          <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" onChange={handleOnChange} value={max}/>\n        </div>\n        <div className=\"section-two\">\n          <h2>You are SECRET SANTA of:</h2>\n          <div className=\"random\">{loading ? raffle : rand}</div>\n          <button onClick={handleOnClick} disabled={loading} className=\"btn\">Roll</button>\n        </div>\n        <div className=\"display\">\n          <ul className=\"display-list\">\n          {\n          num.map((el, index) =>{\n            return(\n            <li key={index}>{el}</li>\n          )})\n          }\n          </ul>\n        </div>\n        </div>\n      </div>\n\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}